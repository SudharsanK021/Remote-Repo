---------------------------------------------------------LESSON 1

FOR OS  -  CICS IS APPLICATION PROGRAM
 
	MULTI-PROGRAMMING ( CICS IS A JOB ) 
		MULTI-TASKING (TASK DISPATCHING ON CICS OWN ADDRSS SPACE) 
			MULTI-THREADING( FOR SHARING SAME STORAGE LOCATION FOR EVERYONE)

RE-ENTRANT : (THE VALUES WHICH CAUSE CHANGES IN WORKING STORAGE WILL BE PREVENTED CHANING OTHER WS OF OTHER USER )
			SEPERATE WS TO EACH USERS
			
RE-ENTRANT AND QUASI RE-ENTRANT IS HANDLED BY CICS

SEVERAL USER , SAME TRANSACTION DOIN , SEPREATE TASK IS INITIATED).
TRANSACTION(UNIQUE) - TASK(DIFFERENT) - THERE CAN BE UNIQUE TRANSACTION ID BUT HAVE DIFFERENT TASK 


PCT ( PROGRAM CONTROL TABLE )
	DEFINES EACH TRANSACTION 
	HAS EACH PGMS WITH TRANSC ID
	
PPT ( PROCESSING PROGRAM TABLE )(OUTPUT =  CODE IS RETRIEVED )
			- HAS LIST OF ALL PROGRAM NAMES
			- HAS STORAGE ADDRS OF PGM IF ALREADY LOADED
			- HAS DISK ADDRS IF PGM IS NOT YET LOADED
			- NEW COPY
			
			
			
---------------------------------------------------------LESSON 2

		MANAGEMENT MODULES(TAKES CARE OF REQUEST OF APPLIC PRG AND DOES OPERATION )
		----------------------------------------------------------------------------
		
		NUCLEUS ( TAKES CARE OF ALL CONTROLS AND PROVIDE OPERATION TO APPLICATION PROGRAM UPON ITS REQUEST )
		
		FILE CONTROL PROGRAM ( FILES IN FCT CAN EITHER BE VSAM OR BDAM )
				FCP TAKES CARE OF DECLARING PHYSICAL ORGANIZ AND OTR ATTRBS IN FILE CONTROL
				FCP NOT ALLOWS OPEN , CLOSE , READ , WRITE , SELECT AND FD 
				
		TERMINAL CONTROL PROGRAM ( SENDTEXT , RECEIEVE-TEXT )
				TAKES CARE CONNECTION BETWEEN APPL PROG AND TERMIANLS
				BMS ( BASIC MAPPING SUPPORT )  RECIEVES REQUEST FROM APP PROG AND SENDS IT TO TERMINAL FOR SEND OR RECEIEVE
			
		TERMINAL CONTROL TABLE TERMINAL ENTRY - USED TO IDENTIFY EACH TERMNINAL IN A NETWORK	
			
		KCP( TASK CONTROL ) -  CREATES TASK FOR TRANSACTION AND TAKES CARE OF ITS STATUS	
		
		SCP ( STORAGE CONTROL ) - MAINTAINS FULL CONTROL OVER VIRTUAL STORAGE FOR ALLOCATION 
								- CONTROLS REQUESTS FOR MAIN STORAGE
								
		ICP ( INTERVAL CONTROL ) - TIME DEPENDENT APPLICATION ( LIKE SETTING TIMER FIR A TASK )
		
		JCM ( JOURNAL CONTROL MODULE ) - CREATES PS AND USES AS BACKUP FOR MASTER FIL DURING SYS FAIL
			
		SIT (SYSTEM INITALIZATION TABLE ) - INITIALIZES THE SYSTEM WHEN NEEDED, IDENTIFIES CICS VERSION BY THE SUFFIX.

		SIGNON TABLE - WILL HAVE ALL VALID USER'S USERNAME & PASSWORD.
		
		
		CONTROL BLOCK 
		-------------------------------------------------
		
		CONTROL BLOCK IS TCA ( TRANSACTION CONTROL AREA ) REPRESENTS TRANSACTIONS 
		CONTROL BLOCK CREATES A BLOCK AND STORES IT IN EIB ( EXECUTE INTERFACE BLOCK )
			
			
---------------------------------------------------------LESSON 6			
		
					EIB - EXEC INTERFACE BLOCK.
					HAS COPY OF DFHEIBLK AS EIB 
					ONE EIB PER TASK 
					KEEPS TASK RELATED INFOS
					
						EIBAID  - ATTENTION KEY
						EIBFN   - WHICH COMMD EXECUTED LAST 
						EIBTIME - 0HHMMSS
						EIBDATE - 0YYDDD ( DDD IS DAY OF THAT YEAR )
						EIBTRNID ( EIB TRANSACTION ID )    -    
						EIBTRMID ( EIB TERMINAL ID ) - CAN BE USED TO RESTRICT PGM IN CERTAIN TERMINALS

		DFHAID - HAS SPECIAL LIST OF AID IDENTIFIERS 
		DFHBMSCA - IS USED TO CHANGE ATTRB VALUES OF MAPLIB IN COBOL
		FACDEFN - REPLACE IF DFHBMSCA	


---------------------------------------------------------LESSON 7


HANDLE CONDIITONS MUST BE SPECIFIES BEFORE CICS COMMANDS 

		The CICS command executed last is shown in a system field EIBFN, while the response code for the last CICS command is shown in another system field EIBRCODE. 
		
		16 EXCEPTIONAL CONITIONAL ALONG WITH CORRS PARAGRAPH / LABELLED NAMED CAN BE MENTIONED TO A HANDLE  CONDITION
			
		EIBRCODE - RESPONSE CODE WILL BE IN THIS EIB FIELDS

		CONDITION WITHOUT SPECIFIYING THE PARAGRAPH NAME IS WASTE. IT TERMINATES 

		EXEC CICS HANDLE ERROR(PARA-NAME) END-EXEC ------ HERE ERROR IS LIKE OTHER ERROR THAT ARISES OTHER THAN MENTIOND	
		SYNTAX :  HANDLE CONDITION
		
		IGNORE WORKS UNTIL NEXT HANDLE ALSO HAS SAME COND AS IGNORE HAS 
		SYNTAX :  IGNORE CONDITION
		
		IF RESP SPECIFIED NOHANDLE IS COMMON 
		RESP VARIABLE IS ALWAYS S9(8) COMP
		
		HANDLE AID WORKS WITH RECIEVE MAP ONLY 
		
		HANDLE AID HIGH PRIORITY THAN HANDLE CONDITION 
		
		AID VALUE WILL BE SENT TO EIBAID WHEN THE TASK GETS INITIATED
	



---------------------------------------------------------LESSON 8

		BMS MAP IS NOTHING BUT A MAPLIB 
		TO CHANGE ATTRB USE 'A' AS SUFFIX AFTER THE SYMBOLIC OR MAP VARIABLE


		CURSOR POSITIONING 
		
		STATIC CURSOR POS IN ATTRB = IC , IN MAP		
			MORE IC GIVEN THEN LAST IC GIVEN WORKS
		
		SYMBOLIC CURSOR / DYNAMIC CURSOR :	
			MOVE -1 TO 'L'
			NEED TO USE 'CURSOR' OPTION IN THE SEND MAP
			
		RELATIVE CURSOR :
				USE CURSOR(NUMBER) IN SEND MAP
				FORMULA : (ROWS-1) * 80 + (COLUMNS -1)
			
			
		RELATIVE OVERRIDES THE SYMBOLIC CURSOR





---------------------------------------------------------LESSON 9

		RECIEVE MAP : ( MAPFAIL )
				MAP 
				MAPSET
				INTO(SYMBOLIC VARIABLE)
				LENGTH(LENGTH OF RECORD) 
				
					INTO IS DEFAULT EVEN IF NOT CODED

		SEND MAP : 
				MAP 
				MAPSET 
				FROM
				
					FROM IS DEFAULT 
					MAPONLY - SENDS THE DEFAULT VALUE OF MAPS 
					DATAONLY - SEND ONLY DATA MOVEDS TO SYM ATR IN APPLICATION PROGRAM ( NOT THE HEADINGS OF MAP)

				FIRST SEND MAP COMBINES BOTH HEADING AND DATA
				SUBSEQUENT SEND WILL SEND ONLY DATA AND NOT THE HEADING 
				ERASE WILL ERASE THE ENTIRE MAP FROM SCREEN AND SENDS A NEW MAP 
				ERASEUP - ERASES ALL THE UNPROTECTED DATA FIELDS 


---------------------------------------------------------LESSON 10

	ASKTIME & FORMAT TIME
	
			ASKTIME
				ABSTIME(USED FOR FURTHER PROCESSING OF DATA)
			
			DEFAULT SEPERATOR : 
					TIME  = :
					DATE  = /
	



---------------------------------------------------------LESSON 11

**********************************************WITHOUT TRANS ID RETURN MENTIONED , CONTROL GOES TO HIGH LEVEL


		HIGH LEVEL =     PROGRAM RECEIVES CONTROL FROM THE CICS
		XCTL       =     TRANSFER TO THE SAME LEVEL PGM
		LINK       =     TRANSFER TO LOWER LEVEL PGM
		RETURN     =     TRANSFER TO HIGHER LEVEL PGM 


				RETURN : ( IF NO OPTIONS CONTROL GOES TO CICS AND SESSION ENDS ) 
						TRANSID
						COMMAREA
						LENGTH(   S9(4) COMP ) 


				LINK :
						PROGRAM = PARAMTER IS MUST 
						
					IT EXPECTS TO RETURN THE CONTROL AFTER THE LOWER LEVEL PGM EXECUTION IS COMPLETED
					IF SECONDLY LINKD PGM HAS ANY OPTIONS THEN PROGRAM TERMINATES ABNORMALLY		

****************************UNTIL EXECUTION IS COMPLETED ALL LINKED PROGRAM ALONG WITH CALLNG & CALLED PROGRAMS STAY IN MAIN MEMORY

****************************   PGMIDERR = IF PROGRAM SPECIFIED IN LINK IS NOT FOUND IN THE PPT 


				COMMAREA LENGTH IS HALF WORD BINARY 





---------------------------------------------------------LESSON 12

			READ : 
					KEY-LENGTH()
					GENERIC 
						- GENERIC CAN BE USED WHEN WE DONT KNOW THE FULL RECORD NUMBER OR NAME 
						- IF HALF REC NUM OR NAME IS SPECIFIED IN RIDFLD THEN THE SAME LENGTH TO BE MENTIONED IN 
								KEY-LENGTH PARAMTER
					

			EXCEPTION : INREQ = IF KEY-LENGTH IS MORE THAN ACTUAL KEY IN FILE OR DB

					GTEQ =  ACT AS SAME BUT FULL KEY MUST BE ENTERED IN RIDFLD


			READ / UPDATE AND REWRITE :
					WHEN READ AND UPDATE GIVEN EXCLUSIVE CONTROL OF THAT **RECORD IS SPECIFIED
					READ WITH UOPDATE IS MANDATORY TO UPDATE RECORD
					AFTER READ-UPDATE COMPLETED THE EXCLUSIVE CONTROL IS UNLOCKED 

			DELETE :
					INDIRECT DELETE : 
					READ
					UPDATE
					DELETE ( RIDFLD NO NEEDED)
					
					DIRECT DELETE :
					DELETE( RIDFLD NEED TO BE MENTIONED ) 
					



---------------------------------------------------------LESSON 13

			DURING READPREV : 
			
				IF RECORD NOT FOUND IN STARTBROWSE 
				GTEQ IS DEFAULT FOR STARTBR
				
				STARTBROWSE 
						RESP(NOTFND):
								PERFORM RESETBROWSE
						RESP(NORMAL):
								PERFORM READPREV
								
				(OR)
				
				STARTBROWSE 
						RESP(NOTFOUND):
								END-BROWSE



				IF FILE DOESNT HAVE HIGH VALUES:
				
				STARTBR (STARTS)
				READNEXT (RETRIVES)
				READPREV ( CHANGES DIRECTION )
				READPREV ( RETRIEVES )


	FOR MULTIPLE BROWSE :
			FOR MULTIPLE BROWSE ( REDQID IS USED)
			IS MUST BE MENTIONED IN STARTBR , READNEXT, READPREV, RESETBR,ENDBR




		
			