----------------------------------IDCAMS--------------------------------------------
IDCAMS = IDC ACCESS METHOD SERVICES

AMS SERVICES : 
	DEFINE , ALTER , LISTCAT , REPRO, DELETE , PRINT ,EXPORT / IMPORT


IDCAMS INVOKING : BATCH , TSO , CICS/ APPLICATION PROGRAM  

COMMANDS :                                  • LISTCAT
• MODAL Commands                         • IF-THEN-ELSE
• SET                                               • VERIFY
• REPRO                                             • PRINT
• DELETE                                          • BUILDINDEX
• ALTER                                          • DEFINE


IF THEN ELSE  , DO END SYNTAX :
		REPRO INFILE (INDD) 	-
		OUTFILE (OUTDD)
		................
		IF LASTCC EQ 0		 -
		THEN 			 -
		DO
			PRINT OUTFILE (OUTDD)
		END
		ELSE
			PRINT INFILE (INDD)


SET COMMAND :
		DEFINE CLUSTER
		IF LASTCC > 0 THEN -
		SET MAXCC = 16
		ELSE REPRO



PARM=( 1, 4 )   ,   PGM=IEFBR14
----------------------------------------------------------DEFINE COMMAND

DEFINE CLUSTER : ABREVIATION ----->   DEF CL

DEFINE CLUSTER NAME (NAME OF CLUS)
DATA (NAME(NAME OF DATA COMP))
INDEX(NAME (NAME OF INDEX COMP))



--------------------------------------------------SPACE ALLOCATION  : 
-------->  FOR DATA AND INDEX COMPOMNENT ALSO WE CAN ASSIGN VILUME REASON IS OF LARGER DATASET 
	CYCLINDER 
	TRACKS 
	RECORDS
	MEGABYTES 
	KILOBYTES 

	 RECORDS < KB < MB < TRACKS < CYCLINDER


SYNTAX  : 
-------->  FOR DATA AND INDEX COMPOMNENT ALSO WE CAN ASSIGN VILUME REASON IS OF LARGER DATASET 
DEFINE CLUSTER (  NAME (NAME OF CLUS)     - 
                                          TRKS(10 10)           )                    - 
DATA (NAME(NAME OF DATA COMP))    - 
INDEX(NAME (NAME OF INDEX COMP))



-----------PRIMARY AND SECONDARY ALLLOCATION OF SPACE :

IN VSAM :
		PRIMARY = 10 , SECONDARY = 12 , MEANS EXTENDS CAN BE MADE 122 TIMES TO PRIMARY FROM SECODNARY
I.E 10 + 12* 122  



----VOLUME :( ABBR = VOL) : 
	-------->  FOR DATA AND INDEX COMPOMNENT ALSO WE CAN ASSIGN VILUME REASON IS OF LARGER DATASET 
	-------->VOLUME=SER=DEVHD1 (IT IS DEFAULT FOR VSAM)
	--------> MULTIPLE VOLUMES CAN BE ASSIGNED TO ONE DATASET
	-------->  IF ONE VOLUME IS FULL THE RECORDS ARE STORED IN DIFF VOLUME 

SYNTAX :   VOLUMES(BS0928)   
	   VOLUMES( 3390 DEVHD1 DEVHD2)	 


------RECORDSIZE() :DEFAULT = ( 4086 4086)

SYNTAX:    RECORDSIZE(AVG MAX)
 ------- TELLS VSAM TO EXCEPT SPECIFIC SIZE OF RECORDS
FOR FB :    RECORDSIZE(80 80)
FOR VB :    RECORDSIZE(80 120)


-------------KEYS():   DEFAULT :KEYS (64 0)

-------------------------------VSAM RECORDS BEGINS IN ZERO POSITION 
USED IN KSDS
SYNTAX : (LENGTH   OFFSET)   
----> OFFSET IS THE INDEX OF KEY



----------------------------------------------------------------DATAYPES OF VSAM
---------------------------------HERE THE DEFAULT IS (KSDS/INDEXED)
------------> KSDS(INDEXED)
------------> ESDS(NONINDEXED)
------------> RRDS(NUMBERED)

 

CISZ = CONTROL INTERVAL SIZE :
DEFAULT : CISZ (4096)

FREESPACE : 

DEFAULT : FREESPACE (0 0)

ALLOCATES FREESPACE TO CI AND CA 
SYNTAX  :    FREESPACE(CI%   CA%)

---------> APPLICABLE FOR KSDS 
---------> MORE PERCENT RESULTS IN LESS PROCESSING RESULT AND LESS FREESPACE RESULT IN control interval and control area split.


SPANNED AND UNSPANNED :  DEFAULT IS  NONSPANNED
	SPANNED	
---------> APPLICABLE FOR KSDS , ESDS
---------> SPANNED ALLOWS LARGER RECORD TO SPLIT AS MULTIPLE CI TO SPILLS THE RECORDS 
--------->The resulting free space in the spanned control interval is unusable by other records, even if they fit logically in the unused bytes.

UNBSPANNED : 
---------> UNSPANNED DOESNT ALLOW SPLIT/SPANNING OF RECORDS 


UNLOADED VS EMPTY DATASET  :

---->UNLOADED : 
	AN UNLOADED DS IS LIKE A DS WHERE RECORDS HAVE NOT EVEN BEEN SAVED FOR ONCE 
	HURBA VALUE IS ALWAYS ZERO
	UNLOADED CAN BE OPENDED BY OUT OPERATION

---->EMPTY : 
	EMPTY IS A DS WHERE RECORDS WOULD BE PREVIOUSLY THERE BUT NOW EMPTY 
	HURBA VALUE IS GREATER THA ZERO BECAUSE OF USED SPACE IN DS
	IT CANT BE OPENED  BY OUT OPERATION
	CAN BE DONE ONLY BY EXTEND / IO MODE . 
		
---->EMPTY EXCEPTION :
	REUSE OPTION OF KSDS CAN BE USED TO CLEAR THE HURBA VALUE AND THE VALUE IF PRESENT AND LOADS AS FRESH DS
	THEN DS CAN BE OPENED IN OUTPUT MODE 


RESUE VS NOREUSE :

------->REUSE SPECIFIES THAT THE DATASET CAN BE REUSED , WHILE DEKLETING EXISTING VALUES
-------> NOREUSE CAN USED IF A DS NOT NEED TO BE DISTURBED



BUFFERSPACE :  DEFAULT IS ----------------->BUFSP (8704)
  	ABBREVIATION ( BUFSP)
-------> SPECIFIES THE AMOUNT OF STORAGE NEEDED TO PROCESS  ATLEAST ONE CI'S DATA CONTENTS 
-------> USED IN  KSDS, ESDS, RRDS


SHAREOPTIONS :
------------------>Across the system is thru ISC ( Inter System Communication)
SYNTAX :  SHAREOPTIONS( CR  CS )
	CR =  CROSS REGION  ( SHAREOPTIONS CAN BE 1,2,3,4   ) 
	CS = CROSS SYSTEM( SHAREOPTIONS CAN BE    3 OR 4 )

 SHAREOPTION 1 :   CAN MUL USER READ OR ONE USER UPDATE 
 SHAREOPTION 2 :   CAN MUL USER READ AND  ONE USER UPDATE 
 SHAREOPTION 3 :   CAN MUL USER READ AND  MUL USER UPDATE 
 SHAREOPTION 4 :   CAN MUL USER READ OR ONE USER UPDATE , BUFFERS USED FOR DIRECT PROCERSSING IS REFESHED 


ERASE VS NOERASE : 

	ERASE FILLS THE DS WITH BINARY CODES AFTER ERASING RECORDS
	NOERASE JUST LEAVES RECORD EMPTY 


SCRATCH : WILL DLETES THE NON VSAM DATA SET 
NO SCRATCH : JUST UNCATLOGS THE DATASET 


















